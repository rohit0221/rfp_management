---
process_proposals:
  description: >
    Extract, clean, chunk, and vectorize supplier proposals from PDFs in `./data/proposals/`, 
    storing structured embeddings in ChromaDB for retrieval and analysis.
  expected_output: >
    Supplier proposal documents are successfully vectorized and stored in ChromaDB, 
    making them searchable and structured for retrieval.
  async_execution: false
  agent: proposal_data_processor

retrieve_proposals:
  description: >
    Retrieve and structure supplier proposal sections stored in ChromaDB, focusing on key evaluation factors.
    The extracted data will be **formatted into a structured Markdown document** for easy comparison.
  expected_output: >
    A well-structured **Markdown document** categorizing supplier proposal details into:
    - **Pricing:** Cost structures, licensing models, additional fees.
    - **Contract Terms:** Agreement duration, termination policies, penalties.
    - **Compliance:** Industry standards met (HIPAA, ISO, SOC2).
    - **Technical Capabilities:** Features, integrations, scalability.
    - **Support & SLAs:** Response times, uptime guarantees, security audits.
    - **Implementation Timeline:** Deployment timeline & onboarding expectations.
    - **Past Performance:** Case studies, client success metrics.
    - **Customization & Flexibility:** API integrations, enterprise-specific options.

    The structured output will be used for supplier comparison and informed decision-making.
  async_execution: false
  agent: proposal_data_retriever
  context:
    - process_proposals


analyze_rfp_responses:
  description: >
    Conduct an **in-depth comparative analysis** of supplier proposals retrieved from ChromaDB.
    
    **Key Objectives:**
    - **Compare supplier proposals** across Pricing, Contract Terms, Compliance, SLAs, and Implementation Timelines.
    - **Identify and quantify risks** using AI-based predictive scoring.
    - **Highlight negotiation opportunities** based on proposal strengths and weaknesses.
    - **Ensure strictly fact-based reporting**—no assumptions, only retrieved proposal data is used.

  expected_output: >
    A **detailed supplier evaluation report** structured as follows:

    **1. Executive Summary**  
    - High-level findings summarizing supplier strengths, weaknesses, and overall rankings.
    - Key risks, pricing competitiveness, and major differentiators.

    **2. Key Differences Between Supplier Proposals**  
    - Structured table comparing:
      - **Pricing** (Fixed vs. Usage-Based, Discounts, Escalation Clauses)
      - **Contract Terms** (Lock-in Clauses, Termination Flexibility, Penalties)
      - **Compliance** (SOC 2, HIPAA, ISO, PCI-DSS)
      - **Support SLAs** (Response Times, Uptime, Penalties for Downtime)
      - **Implementation Timelines** (Delivery Speed, Onboarding Process)
      - **Past Performance & References** (Success Stories, Reputation)

    **3. AI-Driven Risk Assessment**  
    - **Pricing Volatility Score** (1-10)  
    - **Delivery Risk Score** (1-10)  
    - **Contract Risk Score** (1-10)  
    - **Compliance Risk Score** (1-10)  
    - Explanation of each score with supporting proposal details.

    **4. Negotiation & Optimization Strategies**  
    - Tactical recommendations to optimize pricing, SLAs, and contract flexibility.
    - **Negotiation leverage points** for cost savings and improved terms.

    **5. Final Recommendation**  
    - Ranked supplier evaluation with justification.
    - Key trade-offs, selection rationale, and next steps for negotiation.

  async_execution: false
  agent: rfp_analysis_expert
  context:
    - retrieve_proposals  # ✅ Ensures data comes only from structured supplier proposal retrieval

load_historical_pricing_task:
  description: >
    Load historical pricing data from a CSV file to enable price trend analysis.
  expected_output: >
    A structured dataset containing historical pricing trends per supplier.
  async_execution: false
  agent: pricing_risk_analysis_expert

analyze_pricing_risk:
  description: >
    Conduct AI-driven analysis of supplier pricing trends by comparing proposal prices 
    with historical contract data. Identify **volatility, cost trends, and negotiation leverage** 
    based on past pricing behavior.
  expected_output: >
    A structured pricing risk report that includes:
    - **Price Volatility Score**: Quantifies fluctuations in pricing over the past three years.
    - **Risk Assessment**: Categorizes suppliers into Low, Medium, or High risk based on variance.
    - **Trend Analysis**: Identifies whether a supplier's price is increasing, stable, or decreasing.
    - **Negotiation Leverage Points**: Highlights opportunities where suppliers may lower prices.
    - **Forecasted Price Range**: AI-driven projection for future contract price expectations.
  async_execution: false
  agent: pricing_risk_analysis_expert
  context:
    - load_historical_pricing_task  # ✅ Ensure access to past pricing data

negotiation_charter_generation:
  description: >
    Generate a detailed negotiation charter based on historical supply-demand 
    data and AI-driven price forecasts. The final output should be a structured 
    markdown document with pricing analysis, supplier risk assessment, and 
    negotiation strategies.
  expected_output: A fully detailed markdown negotiation charter report.
  agent: negotiation_charter_creator

# risk_analysis:
#   description: Utilize a predictive ML model to analyze risks related to pricing,
#     delivery, and contract terms based on {Historical_Pricing_Data}.
#   expected_output: A risk analysis report detailing potential risks associated with
#     pricing, delivery, and contract terms based on {Historical_Pricing_Data}.
#   async_execution: false
#   agent: rfp_analysis_expert
#   context:
#   - analyze_rfp_responses
# generate_negotiation_charter:
#   description: Create a negotiation charter based on {Commodity_Price_Forecasts} and
#     {Supply_Demand_Data}.
#   expected_output: A comprehensive negotiation charter outlining strategies based
#     on {Commodity_Price_Forecasts} and {Supply_Demand_Data}.
#   async_execution: false
#   agent: negotiation_charter_creator
# generate_supplier_communication:
#   description: Generate and send email/chatbot responses for negotiation using {Negotiation_Terms}.
#   expected_output: Automated email/chatbot responses tailored for supplier negotiations
#     based on {Negotiation_Terms}.
#   async_execution: false
#   agent: supplier_negotiation_specialist
# identify_counteroffers:
#   description: Identify optimal counteroffers and recommend trade-offs based on {Negotiation_Terms}.
#   expected_output: A list of recommended counteroffers and trade-offs for supplier
#     negotiations based on {Negotiation_Terms}.
#   async_execution: false
#   agent: supplier_negotiation_specialist
#   context:
#   - generate_supplier_communication
# draft_contract:
#   description: Prepare a contract template based on negotiated terms and highlight
#     deviations using {Negotiated_Terms}.
#   expected_output: A drafted contract template that includes negotiated terms and
#     highlights any deviations for legal review based on {Negotiated_Terms}.
#   async_execution: false
#   agent: contract_drafting_expert
# legal_review:
#   description: Flag non-compliant clauses for legal approval based on {Drafted_Contract}.
#   expected_output: A report identifying non-compliant clauses in the drafted contract
#     based on {Drafted_Contract}.
#   async_execution: false
#   agent: contract_drafting_expert
#   context:
#   - draft_contract
