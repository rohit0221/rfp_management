Running the Crew
warning: Failed to uninstall package at .venv\Lib\site-packages\psutil-6.0.0.dist-info due to missing `RECORD` file. Installation may result in an incomplete environment.
warning: Failed to uninstall package at .venv\Lib\site-packages\psutil-7.0.0.dist-info due to missing `RECORD` file. Installation may result in an incomplete environment.
Uninstalled 2 packages in 0.36ms
warning: Failed to hardlink files; falling back to full copy. This may lead to degraded performance.
         If the cache and target directories are on different filesystems, hardlinking may not be supported.
         If this is intentional, set `export UV_LINK_MODE=copy` or use `--link-mode=copy` to suppress this warning.
Installed 1 package in 23ms
D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\pydantic\_internal\_config.py:295: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.10/migration/
  warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)
D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:502: UserWarning: <built-in function callable> is not a Python type (it may be an instance of an object), Pydantic will allow any object with no validation since we cannot even enforce that the input is an instance of the given type. To get rid of this error wrap the type with `pydantic.SkipValidation`.
  warn(
D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai_tools\tools\scrapegraph_scrape_tool\scrapegraph_scrape_tool.py:34: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.10/migration/
  @validator("website_url")
D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai_tools\tools\selenium_scraping_tool\selenium_scraping_tool.py:26: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.10/migration/
  @validator("website_url")
D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai_tools\tools\vision_tool\vision_tool.py:15: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.10/migration/
  @validator("image_path_url")
<frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyPacked has no __module__ attribute
<frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyObject has no __module__ attribute
<frozen importlib._bootstrap>:488: DeprecationWarning: builtin type swigvarlink has no __module__ attribute
\U0001f587 AgentOps: Could not record event - no sessions detected. Create a session by calling agentops.start_session()
\U0001f587 AgentOps: Could not record event - no sessions detected. Create a session by calling agentops.start_session()
\U0001f587 AgentOps: Could not record event - no sessions detected. Create a session by calling agentops.start_session()
\U0001f587 AgentOps: Could not record event - no sessions detected. Create a session by calling agentops.start_session()
D:\git_repos\ibm\rfp_management\rfp_management_crew\src\rfp_management_crew\tools\retrieve_vectors.py:61: LangChainDeprecationWarning: The class `LLMChain` was deprecated in LangChain 0.1.17 and will be removed in 1.0. Use :meth:`~RunnableSequence, e.g., `prompt | llm`` instead.
  chain = LLMChain(llm=llm, prompt=prompt_template)
D:\git_repos\ibm\rfp_management\rfp_management_crew\src\rfp_management_crew\tools\retrieve_vectors.py:62: LangChainDeprecationWarning: The method `Chain.run` was deprecated in langchain 0.1.0 and will be removed in 1.0. Use :meth:`~invoke` instead.
  return chain.run(supplier=supplier_name, context=context)
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Scripts\run_crew.exe\__main__.py", line 10, in <module>
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\src\rfp_management_crew\main.py", line 34, in run
    structured_text = retrieval_crew.kickoff(inputs={})  # Runs the retrieval crew
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\crew.py", line 576, in kickoff
    result = self._run_sequential_process()
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\crew.py", line 683, in _run_sequential_process
    return self._execute_tasks(self.tasks)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\crew.py", line 781, in _execute_tasks
    task_output = task.execute_sync(
                  ^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\task.py", line 302, in execute_sync
    return self._execute_core(agent, context, tools)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\task.py", line 366, in _execute_core
    result = agent.execute_task(
             ^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\agent.py", line 243, in execute_task
    result = self.agent_executor.invoke(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\agents\crew_agent_executor.py", line 102, in invoke
    formatted_answer = self._invoke_loop()
                       ^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\agents\crew_agent_executor.py", line 144, in _invoke_loop
    tool_result = self._execute_tool_and_check_finality(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\agents\crew_agent_executor.py", line 374, in _execute_tool_and_check_finality
    tool_result = tool_usage.use(tool_calling, agent_action.text)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\tools\tool_usage.py", line 131, in use
    return f"{self._use(tool_string=tool_string, tool=tool, calling=calling)}"
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\tools\tool_usage.py", line 193, in _use
    result = tool.invoke(input=arguments)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\tools\structured_tool.py", line 236, in invoke
    return self.func(**parsed_args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\crewai\tools\base_tool.py", line 187, in _run
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\src\rfp_management_crew\tools\retrieve_vectors.py", line 79, in retrieve_relevant_proposals
    structured_data = generate_structured_output(supplier, documents)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\src\rfp_management_crew\tools\retrieve_vectors.py", line 62, in generate_structured_output
    return chain.run(supplier=supplier_name, context=context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain_core\_api\deprecation.py", line 181, in warning_emitting_wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain\chains\base.py", line 611, in run
    return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain_core\_api\deprecation.py", line 181, in warning_emitting_wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain\chains\base.py", line 389, in __call__
    return self.invoke(
           ^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain\chains\base.py", line 170, in invoke
    raise e
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain\chains\base.py", line 160, in invoke
    self._call(inputs, run_manager=run_manager)
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain\chains\llm.py", line 126, in _call
    response = self.generate([inputs], run_manager=run_manager)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain\chains\llm.py", line 138, in generate
    return self.llm.generate_prompt(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain_core\language_models\chat_models.py", line 860, in generate_prompt
    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain_core\language_models\chat_models.py", line 690, in generate
    self._generate_with_cache(
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain_core\language_models\chat_models.py", line 925, in _generate_with_cache
    result = self._generate(
             ^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\langchain_openai\chat_models\base.py", line 717, in _generate
    response = self.client.create(**payload)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\openai\_utils\_utils.py", line 279, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\openai\resources\chat\completions\completions.py", line 879, in create
    return self._post(
           ^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\openai\_base_client.py", line 1296, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\openai\_base_client.py", line 973, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\openai\_base_client.py", line 1009, in _request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpcore\_sync\connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpcore\_sync\http11.py", line 136, in handle_request
    raise exc
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpcore\_sync\http11.py", line 106, in handle_request
    ) = self._receive_response_headers(**kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpcore\_sync\http11.py", line 177, in _receive_response_headers
    event = self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpcore\_sync\http11.py", line 217, in _receive_event
    data = self._network_stream.read(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\git_repos\ibm\rfp_management\rfp_management_crew\.venv\Lib\site-packages\httpcore\_backends\sync.py", line 128, in read
    return self._sock.recv(max_bytes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\neural_ninja\AppData\Roaming\uv\python\cpython-3.12.8-windows-x86_64-none\Lib\ssl.py", line 1232, in recv
    return self.read(buflen)
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\neural_ninja\AppData\Roaming\uv\python\cpython-3.12.8-windows-x86_64-none\Lib\ssl.py", line 1105, in read
    return self._sslobj.read(len)
           ^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Step 2: Retrieving structured supplier proposals from ChromaDB...
[1m[95m# Agent:[00m [1m[92mProposal Data Retriever[00m
[95m## Task:[00m [92mRetrieve and structure supplier proposal sections stored in ChromaDB, focusing on key evaluation factors. The extracted data will be **formatted into a structured Markdown document** for easy comparison.
[00m


[1m[95m# Agent:[00m [1m[92mProposal Data Retriever[00m
[95m## Thought:[00m [92mI need to retrieve and structure the supplier proposal sections from ChromaDB, focusing on the specified evaluation factors.[00m
[95m## Using tool:[00m [92mretrieve_relevant_proposals[00m
[95m## Tool Input:[00m [92m
"{\"query\": {\"description\": \"Retrieve supplier proposal sections focusing on Pricing, Contract Terms, Compliance, Technical Capabilities, Support & SLAs, Implementation Timeline, Past Performance, Customization & Flexibility\", \"type\": \"str\"}}"[00m
[95m## Tool Output:[00m [92m

I encountered an error while trying to use the tool. This was the error: Arguments validation failed: 1 validation error for Retrieve_Relevant_Proposals
query
  Input should be a valid string [type=string_type, input_value={'description': 'Retrieve...ibility', 'type': 'str'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type.
 Tool retrieve_relevant_proposals accepts these inputs: Tool Name: retrieve_relevant_proposals
Tool Arguments: {'query': {'description': None, 'type': 'str'}}
Tool Description: 
    Retrieves and structures supplier proposals from ChromaDB, ensuring each supplier's data
    is correctly grouped under subheaders.
    .
Moving on then. I MUST either use a tool (use one at time) OR give my best final answer not both at the same time. When responding, I must use the following format:

```
Thought: you should always think about what to do
Action: the action to take, should be one of [retrieve_relevant_proposals]
Action Input: the input to the action, dictionary enclosed in curly braces
Observation: the result of the action
```
This Thought/Action/Action Input/Result can repeat N times. Once I know the final answer, I must return the following format:

```
Thought: I now can give a great answer
Final Answer: Your final answer must be the great and the most complete as possible, it must be outcome described

```[00m


[1m[95m# Agent:[00m [1m[92mProposal Data Retriever[00m
[95m## Using tool:[00m [92mretrieve_relevant_proposals[00m
[95m## Tool Input:[00m [92m
"{\"query\": {\"description\": \"Retrieve supplier proposal sections focusing on key evaluation factors including Pricing, Contract Terms, Compliance, Technical Capabilities, Support & SLAs, Implementation Timeline, Past Performance, Customization & Flexibility\", \"type\": \"str\"}}"[00m
[95m## Tool Output:[00m [92m

I encountered an error while trying to use the tool. This was the error: Arguments validation failed: 1 validation error for Retrieve_Relevant_Proposals
query
  Input should be a valid string [type=string_type, input_value={'description': 'Retrieve...ibility', 'type': 'str'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type.
 Tool retrieve_relevant_proposals accepts these inputs: Tool Name: retrieve_relevant_proposals
Tool Arguments: {'query': {'description': None, 'type': 'str'}}
Tool Description: 
    Retrieves and structures supplier proposals from ChromaDB, ensuring each supplier's data
    is correctly grouped under subheaders.
    .
Moving on then. I MUST either use a tool (use one at time) OR give my best final answer not both at the same time. When responding, I must use the following format:

```
Thought: you should always think about what to do
Action: the action to take, should be one of [retrieve_relevant_proposals]
Action Input: the input to the action, dictionary enclosed in curly braces
Observation: the result of the action
```
This Thought/Action/Action Input/Result can repeat N times. Once I know the final answer, I must return the following format:

```
Thought: I now can give a great answer
Final Answer: Your final answer must be the great and the most complete as possible, it must be outcome described

```[00m
Processing CloudNexus Technologies 
Headquarters...
Processing CloudTech Solutions...
Processing SkyCloud Innovations 
Headquarters...
Processing CloudNexus Technologies 
Headquarters...
Processing CloudTech Solutions...
Processing SkyCloud Innovations 
Headquarters...
sys:1: DeprecationWarning: builtin type swigvarlink has no __module__ attribute

Aborted!
